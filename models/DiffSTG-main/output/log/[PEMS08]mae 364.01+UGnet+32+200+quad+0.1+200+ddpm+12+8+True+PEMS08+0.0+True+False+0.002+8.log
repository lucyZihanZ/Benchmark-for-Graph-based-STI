{'PATH_MOD': '/gpfs/home/rmn3157/DiffSTG-main/output/model/', 'PATH_LOG': '/gpfs/home/rmn3157/DiffSTG-main/output/log/', 'PATH_FORECAST': '/gpfs/home/rmn3157/DiffSTG-main/output/forecast/', 'data': {'name': 'PEMS08', 'path': '/gpfs/home/rmn3157/DiffSTG-main/data/dataset/', 'feature_file': '/gpfs/home/rmn3157/DiffSTG-main/data/dataset/PEMS08/flow.npy', 'spatial': '/gpfs/home/rmn3157/DiffSTG-main/data/dataset/PEMS08/adj.npy', 'num_recent': 1, 'num_features': 1, 'num_vertices': 170, 'points_per_hour': 12, 'val_start_idx': 10713, 'test_start_idx': 14284}, 'gpu_id': None, 'model': {'T_p': 12, 'T_h': 12, 'V': 170, 'F': 1, 'week_len': 7, 'day_len': 288, 'device': device(type='cuda'), 'd_h': 32, 'N': 200, 'sample_steps': 200, 'epsilon_theta': 'UGnet', 'is_label_condition': True, 'beta_end': 0.1, 'beta_schedule': 'quad', 'sample_strategy': 'ddpm', 'channel_multipliers': [1, 2], 'supports_len': 2, 'C': 32, 'n_channels': 32}, 'n_samples': 8, 'model_name': 'DiffSTG', 'is_test': True, 'epoch': 300, 'optimizer': 'adam', 'lr': 0.002, 'batch_size': 8, 'wd': 1e-05, 'early_stop': 10, 'start_epoch': 0, 'device': device(type='cuda'), 'logger': <utils.common_utils.Logger object at 0x14b9f0b16e60>, 'nni': False, 'mask_ratio': 0.0, 'T_h': 12, 'T_p': 12, 'trial_name': 'UGnet+32+200+quad+0.1+200+ddpm+12+8+True+PEMS08+0.0+True+False+0.002+8', 'log_path': '/gpfs/home/rmn3157/DiffSTG-main/output/log//UGnet+32+200+quad+0.1+200+ddpm+12+8+True+PEMS08+0.0+True+False+0.002+8.log'}
model path:/gpfs/home/rmn3157/DiffSTG-main/output/model/UGnet+32+200+quad+0.1+200+ddpm+12+8+True+PEMS08+0.0+True+False+0.002+8N-200+T_h-12+T_p-12+epsilon_theta-UGnet.dm4stg
forecast_path:/gpfs/home/rmn3157/DiffSTG-main/output/model/UGnet+32+200+quad+0.1+200+ddpm+12+8+True+PEMS08+0.0+True+False+0.002+8N-200+T_h-12+T_p-12+epsilon_theta-UGnet.dm4stg
DiffSTG(
  (eps_model): UGnet(
    (down): ModuleList(
      (0-1): 2 x DownBlock(
        (res): ResidualBlock(
          (tcn1): TcnBlock(
            (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 2))
            (chomp): Chomp()
            (drop): Dropout(p=0.0, inplace=False)
            (net): Sequential(
              (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 2))
              (1): Chomp()
              (2): Dropout(p=0.0, inplace=False)
            )
          )
          (tcn2): TcnBlock(
            (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 2))
            (chomp): Chomp()
            (drop): Dropout(p=0.0, inplace=False)
            (net): Sequential(
              (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 2))
              (1): Chomp()
              (2): Dropout(p=0.0, inplace=False)
            )
          )
          (shortcut): Identity()
          (t_conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1))
          (spatial): SpatialBlock()
          (norm): LayerNorm((170, 32), eps=1e-05, elementwise_affine=True)
        )
      )
      (2): Downsample(
        (conv): Conv2d(32, 32, kernel_size=(1, 3), stride=(1, 2), padding=(0, 1))
      )
      (3): DownBlock(
        (res): ResidualBlock(
          (tcn1): TcnBlock(
            (conv): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 2))
            (chomp): Chomp()
            (drop): Dropout(p=0.0, inplace=False)
            (net): Sequential(
              (0): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 2))
              (1): Chomp()
              (2): Dropout(p=0.0, inplace=False)
            )
            (shortcut): Conv2d(32, 64, kernel_size=(1, 1), stride=(1, 1))
          )
          (tcn2): TcnBlock(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 2))
            (chomp): Chomp()
            (drop): Dropout(p=0.0, inplace=False)
            (net): Sequential(
              (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 2))
              (1): Chomp()
              (2): Dropout(p=0.0, inplace=False)
            )
          )
          (shortcut): Conv2d(32, 64, kernel_size=(1, 1), stride=(1, 1))
          (t_conv): Conv2d(32, 64, kernel_size=(1, 1), stride=(1, 1))
          (spatial): SpatialBlock()
          (norm): LayerNorm((170, 64), eps=1e-05, elementwise_affine=True)
        )
      )
      (4): DownBlock(
        (res): ResidualBlock(
          (tcn1): TcnBlock(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 2))
            (chomp): Chomp()
            (drop): Dropout(p=0.0, inplace=False)
            (net): Sequential(
              (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 2))
              (1): Chomp()
              (2): Dropout(p=0.0, inplace=False)
            )
          )
          (tcn2): TcnBlock(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 2))
            (chomp): Chomp()
            (drop): Dropout(p=0.0, inplace=False)
            (net): Sequential(
              (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 2))
              (1): Chomp()
              (2): Dropout(p=0.0, inplace=False)
            )
          )
          (shortcut): Identity()
          (t_conv): Conv2d(32, 64, kernel_size=(1, 1), stride=(1, 1))
          (spatial): SpatialBlock()
          (norm): LayerNorm((170, 64), eps=1e-05, elementwise_affine=True)
        )
      )
    )
    (middle): MiddleBlock(
      (res1): ResidualBlock(
        (tcn1): TcnBlock(
          (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 2))
          (chomp): Chomp()
          (drop): Dropout(p=0.0, inplace=False)
          (net): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 2))
            (1): Chomp()
            (2): Dropout(p=0.0, inplace=False)
          )
        )
        (tcn2): TcnBlock(
          (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 2))
          (chomp): Chomp()
          (drop): Dropout(p=0.0, inplace=False)
          (net): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 2))
            (1): Chomp()
            (2): Dropout(p=0.0, inplace=False)
          )
        )
        (shortcut): Identity()
        (t_conv): Conv2d(32, 64, kernel_size=(1, 1), stride=(1, 1))
        (spatial): SpatialBlock()
        (norm): LayerNorm((170, 64), eps=1e-05, elementwise_affine=True)
      )
      (res2): ResidualBlock(
        (tcn1): TcnBlock(
          (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 2))
          (chomp): Chomp()
          (drop): Dropout(p=0.0, inplace=False)
          (net): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 2))
            (1): Chomp()
            (2): Dropout(p=0.0, inplace=False)
          )
        )
        (tcn2): TcnBlock(
          (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 2))
          (chomp): Chomp()
          (drop): Dropout(p=0.0, inplace=False)
          (net): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 2))
            (1): Chomp()
            (2): Dropout(p=0.0, inplace=False)
          )
        )
        (shortcut): Identity()
        (t_conv): Conv2d(32, 64, kernel_size=(1, 1), stride=(1, 1))
        (spatial): SpatialBlock()
        (norm): LayerNorm((170, 64), eps=1e-05, elementwise_affine=True)
      )
    )
    (up): ModuleList(
      (0-1): 2 x UpBlock(
        (res): ResidualBlock(
          (tcn1): TcnBlock(
            (conv): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 2))
            (chomp): Chomp()
            (drop): Dropout(p=0.0, inplace=False)
            (net): Sequential(
              (0): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 2))
              (1): Chomp()
              (2): Dropout(p=0.0, inplace=False)
            )
            (shortcut): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
          )
          (tcn2): TcnBlock(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 2))
            (chomp): Chomp()
            (drop): Dropout(p=0.0, inplace=False)
            (net): Sequential(
              (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 2))
              (1): Chomp()
              (2): Dropout(p=0.0, inplace=False)
            )
          )
          (shortcut): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
          (t_conv): Conv2d(32, 64, kernel_size=(1, 1), stride=(1, 1))
          (spatial): SpatialBlock()
          (norm): LayerNorm((170, 64), eps=1e-05, elementwise_affine=True)
        )
      )
      (2): UpBlock(
        (res): ResidualBlock(
          (tcn1): TcnBlock(
            (conv): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 2))
            (chomp): Chomp()
            (drop): Dropout(p=0.0, inplace=False)
            (net): Sequential(
              (0): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 2))
              (1): Chomp()
              (2): Dropout(p=0.0, inplace=False)
            )
            (shortcut): Conv2d(96, 32, kernel_size=(1, 1), stride=(1, 1))
          )
          (tcn2): TcnBlock(
            (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 2))
            (chomp): Chomp()
            (drop): Dropout(p=0.0, inplace=False)
            (net): Sequential(
              (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 2))
              (1): Chomp()
              (2): Dropout(p=0.0, inplace=False)
            )
          )
          (shortcut): Conv2d(96, 32, kernel_size=(1, 1), stride=(1, 1))
          (t_conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1))
          (spatial): SpatialBlock()
          (norm): LayerNorm((170, 32), eps=1e-05, elementwise_affine=True)
        )
      )
      (3): Upsample(
        (conv): ConvTranspose2d(32, 32, kernel_size=(1, 4), stride=(1, 2), padding=(0, 1))
      )
      (4-6): 3 x UpBlock(
        (res): ResidualBlock(
          (tcn1): TcnBlock(
            (conv): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 2))
            (chomp): Chomp()
            (drop): Dropout(p=0.0, inplace=False)
            (net): Sequential(
              (0): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 2))
              (1): Chomp()
              (2): Dropout(p=0.0, inplace=False)
            )
            (shortcut): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))
          )
          (tcn2): TcnBlock(
            (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 2))
            (chomp): Chomp()
            (drop): Dropout(p=0.0, inplace=False)
            (net): Sequential(
              (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 2))
              (1): Chomp()
              (2): Dropout(p=0.0, inplace=False)
            )
          )
          (shortcut): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))
          (t_conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1))
          (spatial): SpatialBlock()
          (norm): LayerNorm((170, 32), eps=1e-05, elementwise_affine=True)
        )
      )
    )
    (x_proj): Conv2d(1, 32, kernel_size=(1, 1), stride=(1, 1))
    (out): Sequential(
      (0): Conv2d(32, 1, kernel_size=(1, 1), stride=(1, 1))
      (1): Linear(in_features=48, out_features=24, bias=True)
    )
  )
)Num_of_parameters:996793
      |---Train--- |---Val Future-- -|-----Val History----|
Epoch | Loss  Time | MAE     RMSE    |  MAE    RMSE   Time|
   0.0| 13.463 1.7s |[3064.755273.11] | 3499.845939.7411.90s
   1.0| 10.413 0.1s | 3066.375192.37 | 2855.474965.4811.87s
predict_path = '/gpfs/home/rmn3157/DiffSTG-main/output/forecast/UGnet+32+200+quad+0.1+200+ddpm+12+8+True+PEMS08+0.0+True+False+0.002+8.pkl'
 |[364.01 457.41 ] | 323.15 409.50 21.40s
sample_strategy:ddim_multi, sample_steps:40 Final results in test:364.01 457.41 250.79 0.80    1955.73 | 3    
